vec4 lumaKey(float threshH, float threshL, vec3 tex){
    
    vec4 buffer = vec4(tex, 1.0);
    
   	float f = mixsoft/2.0;
	float a = mixrange - f;
	float b = mixrange + f;
	
    float luma = (tex.x + tex.y + tex.z) / 3.0;		//construct a grayscale from channel averages

	float mask = smoothstep(a, b, luma);			//apply thresholding to luma map
    
    //if the abs luma value is above/below we have clipped data and should filter it out.
    if(luma > threshH) {			
        #ifdef CLIP_SHOW
        	buffer = vec4(1.0,0.0,0.0, 0.0);   
        #else
        	buffer = vec4(0.0);   
        #endif
    } 
    
    if(luma < threshL) {			
        #ifdef CLIP_SHOW
        	buffer = vec4(0.0,0.0,1.0, 0.0);   
        #else
        	buffer = vec4(0.0);   
        #endif
    }
    
    return buffer;	//return the texture with transparent sections for clipped data
}